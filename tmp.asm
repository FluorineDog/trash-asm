; Listing generated by Microsoft (R) Optimizing Compiler Version 19.10.25019.0 

	TITLE	C:\Users\57626\documents\visual studio 2017\Projects\asmtry\exp\getrec.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_scanf_options
PUBLIC	_scanf
PUBLIC	_getrec
PUBLIC	??_C@_08HPNNALDB@?$CFs?$CFd?$CFd?$CFd?$AA@	; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp____stdio_common_vfscanf:PROC
EXTRN	_info:BYTE
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9:QWORD							; `__local_stdio_scanf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT ??_C@_08HPNNALDB@?$CFs?$CFd?$CFd?$CFd?$AA@
CONST	SEGMENT
??_C@_08HPNNALDB@?$CFs?$CFd?$CFd?$CFd?$AA@ DB '%s%d%d%d', 00H ; `string'
CONST	ENDS
; Function compile flags: /Ogtp
; File c:\users\57626\documents\visual studio 2017\projects\asmtry\exp\getrec.c
;	COMDAT _getrec
_TEXT	SEGMENT
_c$1 = -12						; size = 4
_b$2 = -8						; size = 4
_a$3 = -4						; size = 4
_getrec	PROC						; COMDAT

; 2    : void getrec() {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi

; 3    : 	for (int i = 0; i < N; ++i) {

	mov	esi, OFFSET _info+10
	npad	4
$LL4@getrec:

; 4    : 		int a, b, c;
; 5    : 		scanf("%s%d%d%d", info[i].name, &a, &b, &c);

	lea	eax, DWORD PTR _c$1[ebp]
	push	eax
	lea	eax, DWORD PTR _b$2[ebp]
	push	eax
	lea	eax, DWORD PTR _a$3[ebp]
	push	eax
	lea	eax, DWORD PTR [esi-10]
	push	eax
	push	OFFSET ??_C@_08HPNNALDB@?$CFs?$CFd?$CFd?$CFd?$AA@
	call	_scanf

; 6    : 		info[i].grade[0] = (char)a;

	movzx	eax, BYTE PTR _a$3[ebp]
	add	esp, 20					; 00000014H
	mov	BYTE PTR [esi], al

; 7    : 		info[i].grade[1] = (char)b;

	movzx	eax, BYTE PTR _b$2[ebp]
	mov	BYTE PTR [esi+1], al

; 8    : 		info[i].grade[2] = (char)c;

	movzx	eax, BYTE PTR _c$1[ebp]
	mov	BYTE PTR [esi+2], al
	add	esi, 16					; 00000010H
	cmp	esi, OFFSET _info+42
	jl	SHORT $LL4@getrec
	pop	esi

; 9    : 	}	
; 10   : }

	mov	esp, ebp
	pop	ebp
	ret	0
_getrec	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.14393.0\ucrt\stdio.h
;	COMDAT _scanf
_TEXT	SEGMENT
__Format$ = 8						; size = 4
_scanf	PROC						; COMDAT

; 1275 :     {

	push	ebp
	mov	ebp, esp
	push	esi

; 1276 :         int _Result;
; 1277 :         va_list _ArgList;
; 1278 :         __crt_va_start(_ArgList, _Format);
; 1279 :         _Result = _vfscanf_l(stdin, _Format, NULL, _ArgList);

	mov	esi, DWORD PTR __Format$[ebp]
	push	0
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4

; 1058 :         return __stdio_common_vfscanf(

	lea	ecx, DWORD PTR __Format$[ebp+4]
	push	ecx
	push	0
	push	esi
	push	eax
	call	___local_stdio_scanf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfscanf
	add	esp, 24					; 00000018H
	pop	esi

; 1280 :         __crt_va_end(_ArgList);
; 1281 :         return _Result;
; 1282 :     }

	pop	ebp
	ret	0
_scanf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.14393.0\ucrt\stdio.h
;	COMDAT __vfscanf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfscanf_l PROC					; COMDAT

; 1057 :     {

	push	ebp
	mov	ebp, esp

; 1058 :         return __stdio_common_vfscanf(

	push	DWORD PTR __ArgList$[ebp]
	push	DWORD PTR __Locale$[ebp]
	push	DWORD PTR __Format$[ebp]
	push	DWORD PTR __Stream$[ebp]
	call	___local_stdio_scanf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfscanf
	add	esp, 24					; 00000018H

; 1059 :             _CRT_INTERNAL_LOCAL_SCANF_OPTIONS,
; 1060 :             _Stream, _Format, _Locale, _ArgList);
; 1061 :     }

	pop	ebp
	ret	0
__vfscanf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.14393.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_scanf_options
_TEXT	SEGMENT
___local_stdio_scanf_options PROC			; COMDAT

; 95   :         static unsigned __int64 _OptionsStorage;
; 96   :         return &_OptionsStorage;

	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9 ; `__local_stdio_scanf_options'::`2'::_OptionsStorage

; 97   :     }

	ret	0
___local_stdio_scanf_options ENDP
_TEXT	ENDS
END
